version: '3.5'

services:
  database:
    image: fosol:database
    profiles:
      - all
    restart: "always"
    container_name: fss-database
    build:
      context: ../db
    env_file:
      - ../db/.env
    ports:
      - ${DB_PORT:-5432}:5432
    volumes:
      - fosol-database:${DB_VOLUME:-/var/lib/postgresql/data}
    networks:
      - fosol
      
  api:
    image: fosol:api
    profiles:
      - all
    restart: "always"
    container_name: fss-api
    build:
      context: ../backend
      dockerfile: api/Dockerfile
    env_file:
      - ../backend/api/.env
    ports:
      - ${API_HTTP_PORT:-8080}:8080
      - ${API_HTTPS_PORT:-8443}:8443
    extra_hosts:
      - host.docker.internal:host-gateway
    volumes:
      - fosol-storage:/mnt/storage
    networks:
      - fosol

  app:
    image: fosol:app
    profiles:
      - all
    stdin_open: true
    tty: true
    restart: "always"
    container_name: fss-app
    build:
      context: ../app
      dockerfile: Dockerfile
    env_file: ../app/.env
    volumes:
      - ../app/src:/usr/app/src
      - ../app/public:/usr/app/public
    ports:
      - ${APP_HTTP_PORT:-5173}:5173
      - ${APP_HTTPS_PORT:-5443}:5443
    extra_hosts:
      - host.docker.internal:host-gateway
    depends_on:
      - api
    networks:
      - fosol

  nginx:
    image: fosol:nginx
    profiles:
      - all
    restart: "always"
    container_name: fss-nginx
    build:
      context: ../nginx
    env_file:
      - ../nginx/.env
    ports:
      - ${NGINX_HTTP_PORT:-80}:80
      - ${NGINX_HTTPS_PORT:-443}:443
    extra_hosts:
      - host.docker.internal:host-gateway
    depends_on:
      - api
      - app
    networks:
      - fosol

networks:
  fosol:
    name: fss-net
    driver: bridge

volumes:
  fosol-database:
    name: fss-database
  fosol-storage:
    name: fss-storage
